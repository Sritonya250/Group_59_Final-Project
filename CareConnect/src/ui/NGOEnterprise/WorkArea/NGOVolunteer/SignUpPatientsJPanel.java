/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.NGOEnterprise.WorkArea.NGOVolunteer;

<<<<<<< HEAD
import model.Business;
=======
import model.Model;
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
import model.Enterprise.Enterprise;
import model.Enterprise.NGOEnterprise;
import model.NGOEnterprise.NGOVolunteer.NGOVolunteerProfile;
import model.Organization.NGOAdministrationOrganization;
import model.Organization.NGOVolunteerOrganization;
import model.Organization.Organization;
import model.Patient.BloodGroup;
import model.Patient.Issue;
import model.Patient.PatientProfile;
import model.person.Ethnicity;
import model.person.Gender;
import model.person.Person;
import model.userAccounts.UserAccount;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
<<<<<<< HEAD
import static utils.BusinessUtils.isValidEmail;
import static utils.BusinessUtils.isValidPassword;
import static utils.BusinessUtils.isValidPhoneNumber;
=======
import static utils.ModelUtils.isValidEmail;
import static utils.ModelUtils.isValidPassword;
import static utils.ModelUtils.isValidPhoneNumber;
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
import model.userAccounts.UserAccountDirectory;
import utils.Neighbourhood;

/**
 *
 * @author tbhar
 */
public class SignUpPatientsJPanel extends javax.swing.JPanel {

<<<<<<< HEAD
    Business business;
=======
    Model model;
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
    NGOEnterprise enterprise;
    NGOVolunteerOrganization organization;
    NGOVolunteerProfile currentAuthenticatedUser;
    UserAccount currentUser;
    /**
     * Creates new form SignUpPatientsJPanel
<<<<<<< HEAD
     * @param business
=======
     * @param model
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
     * @param enterprise
     * @param organization
     * @param currentAuthenticatedUser
     * @param currentUser
     */
<<<<<<< HEAD
    public SignUpPatientsJPanel(Business business, NGOEnterprise enterprise, NGOVolunteerOrganization organization, NGOVolunteerProfile currentAuthenticatedUser, UserAccount currentUser) {
        initComponents();
        this.business = business;
=======
    public SignUpPatientsJPanel(Model model, NGOEnterprise enterprise, NGOVolunteerOrganization organization, NGOVolunteerProfile currentAuthenticatedUser, UserAccount currentUser) {
        initComponents();
        this.model = model;
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
        this.enterprise = enterprise;
        this.organization = organization;
        this.currentAuthenticatedUser = currentAuthenticatedUser;
        this.currentUser = currentUser;
        populateDropDowns();
    }
    
    public void populateDropDowns() {
       DefaultComboBoxModel<Ethnicity> ethnicities = new DefaultComboBoxModel<>(Ethnicity.values());
       ethnicityComboBox.setModel(ethnicities);
       
       DefaultComboBoxModel<Gender> genders = new DefaultComboBoxModel<>(Gender.values());
       genderComboBox.setModel(genders);
       
       DefaultComboBoxModel<Neighbourhood> neighbourhoods = new DefaultComboBoxModel<>(Neighbourhood.values());
       neighbourHoodDropDown.setModel(neighbourhoods);
       
       DefaultComboBoxModel<Issue> primaryIssues = new DefaultComboBoxModel<>(Issue.values());
       primaryConcernDropDown.setModel(primaryIssues);
       
       DefaultComboBoxModel<Issue> secondaryIssues = new DefaultComboBoxModel<>(Issue.values());
       secondaryConcernDropDown.setModel(secondaryIssues);
       
       DefaultComboBoxModel<BloodGroup> bloodGroups = new DefaultComboBoxModel<>(BloodGroup.values());
       bloodGroupDropDown.setModel(bloodGroups);

<<<<<<< HEAD
        UserAccountDirectory patientList = this.business.getMasterPatientList();
=======
        UserAccountDirectory patientList = this.model.getMasterPatientList();
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
        
        for(UserAccount account: patientList.getUserAccountList()) {
            System.out.println(account.getAssociatedProfile().getPerson().getFirstName() + "Name");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        labelLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        labelAge = new javax.swing.JLabel();
        spinnerAge = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        genderComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ethnicityComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        neighbourHoodDropDown = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        primaryConcernDropDown = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        secondaryConcernDropDown = new javax.swing.JComboBox<>();
        btnRegister = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        lblBloodGroup = new javax.swing.JLabel();
        bloodGroupDropDown = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(167, 219, 154));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Register New Patients");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Patient's Personal Information:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 70, -1, -1));

        labelFirstName.setText("First Name:");
        add(labelFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 108, -1, -1));
        add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 105, 200, -1));

        labelLastName.setText("Last Name:");
        add(labelLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 157, -1, -1));
        add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 154, 200, -1));

        labelAge.setText("Age:");
        add(labelAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 199, -1, -1));

        spinnerAge.setModel(new javax.swing.SpinnerNumberModel(0, 0, 120, 1));
        add(spinnerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 196, 200, -1));

        jLabel3.setText("Gender:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 241, -1, -1));

        genderComboBox.setToolTipText("");
        add(genderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 238, 200, -1));

        jLabel4.setText("Ethnicity:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 283, -1, -1));

        add(ethnicityComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 280, 200, -1));

        jLabel5.setText("Phone Number:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 325, -1, -1));
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 322, 200, -1));

        jLabel6.setText("Email:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 367, -1, -1));
        add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 364, 200, -1));

        jLabel7.setText("Address:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 453, -1, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 450, 200, -1));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel8.setText("Patient's Health Observations:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(562, 70, -1, -1));

        jLabel9.setText("Neighbourhood:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 409, -1, -1));

        add(neighbourHoodDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 406, 200, -1));

        jLabel10.setText("Primary Concern:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 108, -1, -1));

        add(primaryConcernDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 105, 200, -1));

        jLabel11.setText("Secondary Concern:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 157, -1, -1));

        add(secondaryConcernDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 154, 200, -1));

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 480, 100, 40));

        jLabel12.setText("User Name:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 241, -1, -1));
        add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(643, 238, 200, -1));

        jLabel13.setText("Password:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(555, 283, -1, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 280, 200, -1));

        lblBloodGroup.setText("Blood Group:");
        add(lblBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 198, -1, -1));

        add(bloodGroupDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 195, 200, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        
        String patientFirstName = txtFirstName.getText();
        String patientLastName = txtLastName.getText();
        String phoneNumber = txtPhoneNumber.getText();
        String emailId = txtEmailId.getText();
        String address = txtAddress.getText();
        String userName = txtUserName.getText();
        String password = txtPassword.getText();
        String spinnerValue = spinnerAge.getValue().toString();
        
        if(spinnerValue.isBlank()) {
           JOptionPane.showMessageDialog(this, "Patient Age is null!");
           return;
        }
        
        if(patientFirstName.isBlank()) {
           JOptionPane.showMessageDialog(this, "Patient First Name can't be null!");
           return;
        }

        if(patientLastName.isBlank()) {
           JOptionPane.showMessageDialog(this, "Patient Last Name can't be null!");
           return;
        }

        if(phoneNumber.isBlank()) {
           JOptionPane.showMessageDialog(this, "Patient's Phone number can't be null!");
           return;
        }

        if(emailId.isBlank()) {
           JOptionPane.showMessageDialog(this, "Patient's Email ID can't be null!");
           return;
        }

        if(address.isBlank()) {
           JOptionPane.showMessageDialog(this, "Patient's address can't be null!");
           return;
        }
      
        if(userName.isBlank()){
           JOptionPane.showMessageDialog(this, "Patient's User Name can't be null!");
           return;
        }

        if(password.isBlank()){
           JOptionPane.showMessageDialog(this, "Patient's password can't be null!");
           return;
        }

        if(!isValidPassword(password)) {
           JOptionPane.showMessageDialog(this, "Patient's password is not valid!");
           return;
        }

        if(!isValidEmail(emailId)) {
           JOptionPane.showMessageDialog(this, "Patient's Email ID is invalid!");
           return;
        }

        if(!isValidPhoneNumber(phoneNumber)){
            JOptionPane.showMessageDialog(this, "Patient's Phone number is invalid!");
           return;
        }

        Gender selectedGender = (Gender) genderComboBox.getSelectedItem();

        if(selectedGender == null) {
            JOptionPane.showMessageDialog(this, "Patient's Gender is not selected!");
           return;
        }

        Ethnicity selectedEthnicity = (Ethnicity) ethnicityComboBox.getSelectedItem();

        if(selectedEthnicity == null) {
            JOptionPane.showMessageDialog(this, "Patient's Ethnicity is not selected!");
           return;
        }

        Neighbourhood selectedNeighbourhood = (Neighbourhood) neighbourHoodDropDown.getSelectedItem();
        
        if(selectedNeighbourhood == null) {
            JOptionPane.showMessageDialog(this, "Patient's Neighbourhood is not selected!");
           return;
        }

        Issue selectedPrimaryIssue = (Issue) primaryConcernDropDown.getSelectedItem();

        if(selectedPrimaryIssue == null) {
            JOptionPane.showMessageDialog(this, "Patient's Primary Issue is not selected!");
           return;
        }

        Issue selectedSecondaryIssue = (Issue) secondaryConcernDropDown.getSelectedItem();

        if(selectedSecondaryIssue == null) {
            JOptionPane.showMessageDialog(this, "Patient's Secondary Issue is not selected!");
           return;
        }
        
        BloodGroup selectedBloodGroup = (BloodGroup) bloodGroupDropDown.getSelectedItem();

        if(selectedBloodGroup == null) {
            JOptionPane.showMessageDialog(this, "Patient's Blood Group is not selected!");
           return;
        }
        
<<<<<<< HEAD
        boolean isExistingUser = business.isExistingUserByUserName(userName);
=======
        boolean isExistingUser = model.isExistingUserByUserName(userName);
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
        
        if(isExistingUser) {
            JOptionPane.showMessageDialog(this, "UserName Already exists");
            return;
        }
        
<<<<<<< HEAD
        UserAccountDirectory masterPatientList = business.getMasterPatientList();
=======
        UserAccountDirectory masterPatientList = model.getMasterPatientList();
>>>>>>> 36de84e22a5fdfd60b6022debe21717dd918fd97
        
        //Signup Patient
        Person p = new Person();
        p.setFirstName(patientFirstName);
        p.setLastName(patientLastName);
        p.setGender(selectedGender);
        p.setEthnicity(selectedEthnicity);
        p.setAge(Integer.parseInt(spinnerValue));
        p.setPhoneNum(phoneNumber);
        p.setEmail(emailId);
        p.setAddress(address);
        
        PatientProfile patient = new PatientProfile(p);
        
        //Need to create the NGO Volunteer, and then add the NGO volunteer who onboarded the patient
        patient.setBloodGroup(selectedBloodGroup);
        patient.setNeighbourhood(selectedNeighbourhood);
        patient.setPrimaryIssue(selectedPrimaryIssue);
        patient.setSecondaryIssue(selectedSecondaryIssue);
        patient.setNGOVolunteer(currentAuthenticatedUser);
        
        currentAuthenticatedUser.assignPatient(patient);
        
        UserAccount patientUser = masterPatientList.createUserAccount(patient, userName, password, true); 
        
        JOptionPane.showMessageDialog(this, "Patient has been successfully Registered!!");
        
        txtFirstName.setText("");
        txtLastName.setText("");
        txtPhoneNumber.setText("");
        txtEmailId.setText("");
        txtAddress.setText("");
        txtUserName.setText("");
        txtPassword.setText("");
        spinnerAge.setValue(0);
    }//GEN-LAST:event_btnRegisterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<BloodGroup> bloodGroupDropDown;
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<Ethnicity> ethnicityComboBox;
    private javax.swing.JComboBox<Gender> genderComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel labelAge;
    private javax.swing.JLabel labelFirstName;
    private javax.swing.JLabel labelLastName;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JComboBox<Neighbourhood> neighbourHoodDropDown;
    private javax.swing.JComboBox<Issue> primaryConcernDropDown;
    private javax.swing.JComboBox<Issue> secondaryConcernDropDown;
    private javax.swing.JSpinner spinnerAge;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
